name: Spring Boot CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Build Spring Boot app
        run: mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and Push Docker image
        run: |
          docker build --no-cache -t no0404ir0302/demo-ci-cd:latest .
          docker push no0404ir0302/demo-ci-cd:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "üßπ Cleaning old containers..."
            docker-compose -f /home/ubuntu/ci-cd/docker-compose.yml down -v

            echo "‚¨ÜÔ∏è Pulling latest image..."
            docker pull no0404ir0302/demo-ci-cd:latest

            echo "üöÄ Starting containers..."
            docker-compose -f /home/ubuntu/ci-cd/docker-compose.yml up -d --build

            echo "‚è≥ Waiting for DB to be healthy..."
            for i in {1..20}; do
              STATUS=$(docker inspect --format='{{.State.Health.Status}}' postgres-db)
              if [ "$STATUS" = "healthy" ]; then
                echo "‚úÖ DB is healthy!"
                break
              fi
              echo "Waiting for DB... ($i/20)"
              sleep 5
            done

            echo "üíª Running tests inside app container..."
            docker exec spring-app mvn test

            echo "‚úÖ Deployment completed successfully!"
